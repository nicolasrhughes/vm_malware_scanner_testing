import infection_utilities as iu
from time import sleep
from os import path
from os import listdir


def generate_infected_raw_vms(config_file):
    automate = iu.InfectionUtilities()
    automate.process_config(config_file)
    virus_path = automate.get_virus_path()
    automate.close()
    for virus in listdir(virus_path):
        automate = iu.InfectionUtilities()
        automate.process_config(config_file)
        automate.set_virus_name(virus)
        automate.set_logging(automate.MAIN_LOGGING or automate.MODULE_LOGGING)
        automate.attach_vm()
        automate.clone_vm_disk()
        automate.attach_cloned_drive()
        automate.start_vm()
        try:
            automate.attach_vm_ip()
            automate.start_vm_ssh_session()
            automate.start_vm_sftp_session()
            automate.create_windows_launcher(virus)
            full_virus_path = path.join(virus_path, virus)
            full_launcher_path = automate.get_full_launcher_path()
            automate.send_vm_sftp_file_or_dir(full_virus_path, "Malware")
            automate.send_vm_sftp_file_or_dir(full_launcher_path)
            automate.setup_startup_link()
            automate.close_vm_sftp_session()
            automate.send_vm_ssh_shutdown()
            automate.start_vm()
            sleep(180)
            automate.revert_drive_attachment()
        except RuntimeError or FileNotFoundError:
            print("Problems encountered when trying to create a vm image using {}".format(virus))
        automate.close()


def main(config_file):
    generate_infected_raw_vms(config_file)


if __name__ == '__main__':
    arguments = iu.InfectionUtilities.parse_config_file()
    if arguments.config_file:
        main(arguments.config_file)
    else:
        main('config.txt')
